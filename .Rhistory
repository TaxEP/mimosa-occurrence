setwd("B:/yagob/GoogleDrive/Academia/Parallel_projects/Mimosa_occurrence")
pachy <- read.csv("datasets/mimosa_clean.csv")
pachy <- read.csv("datasets\mimosa_clean.csv")
pachy <- read.csv("datasets/mimosa-clean.csv")
View(pachy)
pachy <- read.csv("datasets/mimosa-clean.csv", row.names = F)
View(pachy)
# Extracting labels
data_labels <- data.frame("labels" =  pachy$gen_sp,
"std_labels" = NA)
# Standardizing tip labels
data_labels$std_labels <- gsub("var.", "", data_labels$labels) # removing 'var.'
data_labels$std_labels <- gsub("subsp.", "", data_labels$std_labels) # removing 'subsp.'
data_labels$std_labels <- gsub("  ", " ", data_labels$std_labels) # replacing double spaces by single spaces
data_labels$std_labels <- gsub(" ", "_", data_labels$std_labels) # replacing spaces by underline
data_labels$std_labels <- trimws(data_labels$std_labels) # removing white spaces
View(data_labels)
# Extracting labels
data_labels <- data.frame("labels" =  pachy$gen_sp,
"std_labels" = NA)
?gsub
View(data_labels)
View(pachy)
pachy$gen_sp <- paste(pachy$genus, "_", pachy$species)
View(pachy)
pachy$gen_sp <- paste(pachy$genus, "_", pachy$species, sep = "")
list_pachy <- read.txt("lista_pachycarpae.txt")
?read.txt
read_txt
?read.txt
list_pachy <- read.table("lista_pachycarpae.txt")
?read.text
list_pachy <- scan("lista_pachycarpae.txt")
?scan
list_pachy <- scan("lista_pachycarpae.txt", type = "character")
list_pachy <- scan("lista_pachycarpae.txt", what = "character")
list_pachy
test <- split(list_pachy, sep = ",")
?split
?paste
test <- paste0(list_pachy, sep = ",")
test <- paste0(list_pachy, collapse = ",")
test
?separate
test <- strsplit(list_pachy, pattern = ",")
?strsplit
test <- str_split(list_pachy, pattern = ",")
library(tidyverse)
test <- str_split(list_pachy, pattern = ",")
test <- str_split(list_pachy, pattern = ",")
View(test)
View(test)
test <- str_split(list_pachy, pattern = ",")[[1]]
test
list_pachy <- str_split(list_pachy, pattern = ",")[[1]]
# Filtering
pachy <- pachy[pachy$gen_sp %in% list_pachy, ]
View(pachy)
# Reading shapefile: biomes
biomes <- readOGR("shapefiles/biomes/bioma_1milhao_uf2015_250mil_IBGE_albers_v4_revisao_pampa_lagoas.shp")
library(sp)
# Reading shapefile: biomes
biomes <- readOGR("shapefiles/biomes/bioma_1milhao_uf2015_250mil_IBGE_albers_v4_revisao_pampa_lagoas.shp")
library(raster)
# Reading shapefile: biomes
biomes <- readOGR("shapefiles/biomes/bioma_1milhao_uf2015_250mil_IBGE_albers_v4_revisao_pampa_lagoas.shp")
library(rgdal)
# Reading shapefile: biomes
biomes <- readOGR("shapefiles/biomes/bioma_1milhao_uf2015_250mil_IBGE_albers_v4_revisao_pampa_lagoas.shp")
plot(biomes)
coords <- pachy
coordinates(pachy) <- ~ longitude + latitude
points(coords)
coordinates(coords) <- ~ longitude + latitude
proj4string(coords) <- crswgs84
crswgs84 <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs") # EPSG:4326 - WGS 84
coords <- pachy
coordinates(coords) <- ~ longitude + latitude
coords <- pachy
coordinates(coords) <- ~ longitude + latitude
# Reading csv
pachy <- read.csv("datasets/mimosa-clean.csv", row.names = F)
# Reading csv
pachy <- read.csv("datasets/mimosa-clean.csv", row.names = F)
# Reading csv
pachy <- read.csv("datasets/mimosa-clean.csv", row.names = FALSE)
# Reading csv
pachy <- read.csv("datasets/mimosa-clean.csv")
View(pachy)
# Standardizing names
pachy$gen_sp <- paste(pachy$genus, "_", pachy$species, sep = "")
# Reading and separating pachycarpae names
list_pachy <- scan("lista_pachycarpae.txt", what = "character")
list_pachy <- str_split(list_pachy, pattern = ",")[[1]]
# Filtering
pachy <- pachy[pachy$gen_sp %in% list_pachy, ]
# Reading shapefile: biomes
biomes <- readOGR("shapefiles/biomes/bioma_1milhao_uf2015_250mil_IBGE_albers_v4_revisao_pampa_lagoas.shp")
crswgs84 <- CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs") # EPSG:4326 - WGS 84
plot(biomes)
coords <- pachy
coordinates(coords) <- ~ longitude + latitude
proj4string(coords) <- crswgs84
points(coords)
?points
points(coords, col = "blue", lwd = 0.1)
plot(biomes)
points(coords, col = "blue", lwd = 0.1)
plot(biomes)
points(coords, col = "blue", lwd = 0.1, cex = 0.1)
points(coords, col = "blue", lwd = 1, cex = 0.1)
plot(biomes)
points(coords, col = "blue", lwd = 1, cex = 0.1)
points(coords, col = "blue", lwd = 1, cex = 0.5)
plot(biomes)
points(coords, col = "blue", lwd = 10, cex = 0.5)
points(coords, col = "blue", lwd = 5, cex = 0.5)
plot(biomes)
points(coords, col = "blue", lwd = 5, cex = 0.5)
plot(biomes)
points(coords, col = "blue", lwd = 3, cex = 0.5)
points(coords, col = makeTransparent("blue", alpha = 0.8), lwd = 3, cex = 0.5)
# Function to get equivalent color with different transparency
makeTransparent = function(..., alpha=0.5) {
if(alpha<0 | alpha>1) stop("alpha must be between 0 and 1")
alpha = floor(255*alpha)
newColor = col2rgb(col=unlist(list(...)), alpha=FALSE)
.makeTransparent = function(col, alpha) {
rgb(red=col[1], green=col[2], blue=col[3], alpha=alpha, maxColorValue=255)
}
newColor = apply(newColor, 2, .makeTransparent, alpha=alpha)
return(newColor)
}
plot(biomes)
points(coords, col = makeTransparent("blue", alpha = 0.8), lwd = 3, cex = 0.5)
plot(biomes)
points(coords, col = makeTransparent("blue", alpha = 0.5), lwd = 3, cex = 0.5)
#Loading an elevation raster
alt <- raster('HYP_HR_SR/HYP_HR_SR.tif')
e <- as(extent(-50.5, -38.5, -23.25, -8.5), 'SpatialPolygons')
crs(e) <- crswgs84
r <- crop(alt, e)
rr <- mask(r, biomes)
plot(rr)
extent(biomes)
extent(biomes)$extent
class(extent(biomes))
extent(biomes)@extent
e <- as(extent(biomes), 'SpatialPolygons')
crs(e) <- crswgs84
r <- crop(alt, e)
rr <- mask(r, biomes)
plot(rr)
plot(rr, col = "grey")
?plot.raster
alt_plot  <- spplot(rr, col.regions = grey(1:100/100, alpha = 0.7),
maxpixels = 2e10, colorkey = FALSE)
alt_plot
points(coords, col = makeTransparent("blue", alpha = 0.5), lwd = 3, cex = 0.5)
alt_plot <- layer(panel.points(longitude, latitude, col="green", pch=19), data=coords)
library(latticeExtra)
alt_plot <- layer(panel.points(longitude, latitude, col="green", pch=19), data=coords)
alt_plot  <- spplot(rr, col.regions = grey(1:100/100, alpha = 0.7),
maxpixels = 2e10, colorkey = FALSE)
alt_plot + layer(panel.points(longitude, latitude, col="green", pch=19), data=coords)
?layer
View(coords)
coords
coords@coords
alt_plot + layer(panel.points(longitude, latitude, col="green", pch=19), data=coords@coords)
plot(biomes)
points(coords, col = makeTransparent("blue", alpha = 0.5), lwd = 3, cex = 0.5)
?unique
# Matrix
# Creating a presence/absence matrix
pachy_matrix <- matrix(data = NA, nrow = length(unique(pachy$id_grid)),
ncol = length(unique(pachy$gen_sp)))
pachy_matrix <- as.data.frame(pachy_matrix)
colnames(pachy_matrix) <- unique(pachy$gen_sp)
rownames(pachy_matrix) <- unique(pachy$id_grid)
for(i in 1:nrow(pachy_matrix)){
for(j in 1:ncol(pachy_matrix)){
if(colnames(pachy_matrix)[j] %in% pachy$gen_sp[pachy$id_grid == rownames(pachy_matrix)[i]]){
pachy_matrix[i, j] <- 1
} else {
pachy_matrix[i, j] <- 0
}
}
}
?richness
View(pachy_matrix)
pachy_df <- data.frame("id" = rownames(pachy_matrix), "sr" = rowSums(pachy_matrix))
View(pachy_df)
# Assigning results for each grid cell by merging results and a spatial polygon
sr_poly <- merge(grids_br, pachy_df, by.x = "id")
# Reading grid cells
grids_br <- readOGR("shapefiles/grids_br/grids_br.shp")
# Assigning results for each grid cell by merging results and a spatial polygon
sr_poly <- merge(grids_br, pachy_df, by.x = "id")
# Species richness
sr_plot <- spplot(sr_poly,
zcol = "sr",
xlim = c(-73.99045 , -28.99045), ylim = c(-33.72816 , 5.271841),
par.settings = list(fontsize = list(text = 21)),
at = seq(0, 55, length.out = 16),
colorkey = TRUE,
sp.layout = list(list(biomes, fill = "gray90", lwd = 2)),
col.regions = makeTransparent(rev(magma(16)), alpha = 0.85),
scales = list(draw = FALSE))
library(viridis)
# Species richness
sr_plot <- spplot(sr_poly,
zcol = "sr",
xlim = c(-73.99045 , -28.99045), ylim = c(-33.72816 , 5.271841),
par.settings = list(fontsize = list(text = 21)),
at = seq(0, 55, length.out = 16),
colorkey = TRUE,
sp.layout = list(list(biomes, fill = "gray90", lwd = 2)),
col.regions = makeTransparent(rev(magma(16)), alpha = 0.85),
scales = list(draw = FALSE))
sr_plot
summary(sr_poly@data)
# Species richness
sr_plot <- spplot(sr_poly,
zcol = "sr",
xlim = c(-73.99045 , -28.99045), ylim = c(-33.72816 , 5.271841),
par.settings = list(fontsize = list(text = 21)),
at = seq(0, 31, length.out = 16),
colorkey = TRUE,
sp.layout = list(list(biomes, fill = "gray90", lwd = 2)),
col.regions = makeTransparent(rev(magma(16)), alpha = 0.85),
scales = list(draw = FALSE))
sr_plot
